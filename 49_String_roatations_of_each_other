You are given two strings s1 and s2, of equal lengths. The task is to check if s2 is a rotated version of the string s1.

Note: A string is a rotation of another if it can be formed by moving characters from the start to the end (or vice versa) without rearranging them.

Examples :

Input: s1 = "abcd", s2 = "cdab"
Output: true
Explanation: After 2 right rotations, s1 will become equal to s2.

Input: s1 = "abcd", s2 = "acbd"
Output: false
Explanation: Strings are not rotations of each other.

class Solution {
  public:
    bool areRotations(string &s1, string &s2) {
        // code here
        if(s1.length()!=s2.length()) return false;
        string temp=s1+s1;
        return (temp.find(s2) != string::npos);
        
    }
};

TC:O(n);
SC:O(n);
