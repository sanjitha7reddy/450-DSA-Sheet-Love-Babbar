class Solution {
  public:
    void sort012(vector<int>& arr) {
        // code here
         int low=0;
         int mid=0;
         int high=arr.size()-1;
         while(mid<=high){
             if(arr[mid]==0){
                 swap(arr[low++],arr[mid++]);
             }
             else if(arr[mid]==1){
                 mid++;
             }
             else{
                swap(arr[mid],arr[high--]); 
                 
             }
         }
    }
};
//Time Complexity:O(n)(because the entire array is traversed only once)
//Space Complexity:O(1)(because extra space is not used,we used the array itself)
