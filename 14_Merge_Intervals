  Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
  Output: [[1,6],[8,10],[15,18]]
  Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].
  
  #include <bits/stdc++.h> 
  /*
  
      intervals[i][0] = start point of i'th interval
      intervals[i][1] = finish point of i'th interval
  
  */
  
  vector<vector<int>> mergeIntervals(vector<vector<int>> &intervals)
  {
      vector<vector<int>> result;
          //base case when threr are no intervals
          if(intervals.size()==0)return result;
          //sort takes O(nlogn) time
          sort(intervals.begin(),intervals.end());
          //insert the the the first interval in the result
          result.push_back(intervals[0]);
          int j=0;
          //Traverse the whole vector .Takes O(n) time
          for(int i=1;i<intervals.size();i++)
          {
              //if intevals are overlapping
              if(result[j][1]>=intervals[i][0]) result[j][1]=max(result[j][1],intervals[i][1]);
              //else they are not overlapping
              else
              {
                  j++;
                  result.push_back(intervals[i]);
              }
          }
          return result;
          
      // Write your code here.
  }
  TC:O(n logn)
  SC:O(n)
