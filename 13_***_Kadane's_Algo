Input: arr[] = [2, 3, -8, 7, -1, 2, 3]
Output: 11
Explanation: The subarray {7, -1, 2, 3} has the largest sum 11.

class Solution {
  public:
    int maxSubarraySum(vector<int> &arr) {
    int maxSoFar = arr[0];
    int maxEndingHere = arr[0];  //It means the maximum sum till this particualr element ie when ur iterating through it

    for (int i = 1; i < arr.size(); i++) {
        maxEndingHere = max(arr[i], maxEndingHere + arr[i]);
        maxSoFar = max(maxSoFar, maxEndingHere);
    }

    return maxSoFar;  // this ensures 0 if all negatives


    }
    
};
TC:O(n);
SC:O(1);
