Given an n x n matrix, mat[n][n] of integers. The task is to find the maximum value of mat(c, d)- mat(a, b) over all choices of indexes such that both c > a and d > b.

Example 1:

Input: mat[N][N] = {{ 1, 2, -1, -4, -20 },
             { -8, -3, 4, 2, 1 }, 
             { 3, 8, 6, 1, 3 },
             { -4, -1, 1, 7, -6 },
             { 0, -4, 10, -5, 1 }};
Output: 18
Explanation: The maximum value is 18 as mat[4][2] - mat[1][0] = 18 has maximum difference.

Your Task:  
You don't need to read input or print anything. Your task is to complete the function findMaxValue() which takes a matrix mat and returns an integer as output.

class Solution {
  public:
    int findMaxValue(vector<vector<int>>& mat, int n) {
        // Write your code here
        vector<vector<int>>maxMat(n,vector<int>(n));
            maxMat[n-1][n-1]=mat[n-1][n-1];
           for(int j=n-2;j>=0;j--){
               maxMat[n-1][j]=max(maxMat[n-1][j+1],mat[n-1][j]);
               
           }
           for(int i=n-2;i>=0;i--){
               maxMat[i][n-1]=max(maxMat[i+1][n-1],mat[i][n-1]);
           }
           for(int i=n-2;i>=0;i--){
               for(int j=n-2;j>=0;j--){
                   maxMat[i][j]=max({maxMat[i+1][j],maxMat[i][j+1],mat[i][j]});
               }
           }
        
        int ans=INT_MIN;
        for(int i=0;i<n-1;i++){
            for(int j=0;j<n-1;j++){
                ans=max(ans,maxMat[i+1][j+1]-mat[i][j]);
            }
        }
        return ans;
    }
};
              

TC:O(n^2)
SC:O(n^2)
